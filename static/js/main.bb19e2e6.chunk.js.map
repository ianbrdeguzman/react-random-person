{"version":3,"sources":["App.js","index.js"],"names":["App","useState","person","setPerson","isLoading","setIsLoading","title","setTitle","value","setValue","fetchPerson","a","fetch","response","status","Error","statusText","json","data","results","phone","email","image","picture","large","name","firstName","first","lastName","last","password","login","location","street","number","age","dob","newPerson","alert","console","error","useEffect","handleMouseOver","e","target","classList","contains","newTitle","dataset","id","newValue","className","src","alt","onMouseOver","data-id","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAuIeA,MA3Hf,WAAgB,IAAD,EACiBC,mBAAS,MAD1B,mBACJC,EADI,KACIC,EADJ,OAEuBF,oBAAS,GAFhC,mBAEJG,EAFI,KAEOC,EAFP,OAGeJ,mBAAS,MAHxB,mBAGJK,EAHI,KAGGC,EAHH,OAIeN,mBAAS,MAJxB,mBAIJO,EAJI,KAIGC,EAJH,KAMLC,EAAW,uCAAG,wDAAAC,EAAA,sEAEZN,GAAa,GAFD,SAGWO,MAXvB,8BAQY,aAGNC,EAHM,QAICC,QAAU,KAJX,sBAKF,IAAIC,MAAMF,EAASG,YALjB,uBAOOH,EAASI,OAPhB,OAONC,EAPM,OAQNhB,EAASgB,EAAKC,QAAQ,GAEpBC,EAAiBlB,EAAjBkB,MAAOC,EAAUnB,EAAVmB,MACAC,EAAUpB,EAAOqB,QAAxBC,MAXI,EAYiCtB,EAAOuB,KAArCC,EAZH,EAYJC,MAAwBC,EAZpB,EAYcC,KAClBC,EAAa5B,EAAO6B,MAApBD,SAbI,EAcqB5B,EAAO8B,SAASC,OAAzCC,EAdI,EAcJA,OAAcD,EAdV,EAcIR,KACRU,EAAQjC,EAAOkC,IAAfD,IAEFE,EAAY,CACdf,QACAF,QACAC,QACAI,KAAK,GAAD,OAAKC,EAAL,YAAkBE,GACtBK,OAAO,GAAD,OAAKC,EAAL,YAAeD,GACrBE,MACAL,YAGJzB,GAAa,GACbF,EAAUkC,GACV9B,EAAS,QACTE,EAAS4B,EAAUZ,MA9BP,kDAgCZa,MAAM,EAAD,IACLC,QAAQC,MAAR,MAjCY,0DAAH,qDAqCjBC,qBAAU,WACN/B,MACD,IAEH,IAAMgC,EAAkB,SAACC,GACrB,GAAIA,EAAEC,OAAOC,UAAUC,SAAS,QAAS,CACrC,IAAMC,EAAWJ,EAAEC,OAAOI,QAAQC,GAC5BC,EAAWhD,EAAO6C,GACxBxC,EAASwC,GACTtC,EAASyC,KAIjB,OACI,iCACI,qBAAKC,UAAU,oBACf,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBACIC,IAAKlD,GAAUA,EAAOoB,MACtB+B,IAAI,cACJF,UAAU,aAEd,oBAAGA,UAAU,aAAb,gBACO,+BAAO7C,IADd,SAGA,mBAAG6C,UAAU,aAAb,SAA2B3C,IAC3B,sBAAK2C,UAAU,cAAf,UACI,wBACIA,UAAU,OACVG,YAAaZ,EACba,UAAQ,OAHZ,SAKI,cAAC,IAAD,MAEJ,wBACIJ,UAAU,OACVG,YAAaZ,EACba,UAAQ,QAHZ,SAKI,cAAC,IAAD,MAEJ,wBACIJ,UAAU,OACVG,YAAaZ,EACba,UAAQ,MAHZ,SAKI,cAAC,IAAD,MAEJ,wBACIJ,UAAU,OACVG,YAAaZ,EACba,UAAQ,SAHZ,SAKI,cAAC,IAAD,MAEJ,wBACIJ,UAAU,OACVG,YAAaZ,EACba,UAAQ,QAHZ,SAKI,cAAC,IAAD,MAEJ,wBACIJ,UAAU,OACVG,YAAaZ,EACba,UAAQ,WAHZ,SAKI,cAAC,IAAD,SAGR,wBAAQJ,UAAU,MAAMK,QAAS9C,EAAjC,SACKN,EAAY,UAAY,yBC1HjDqD,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.bb19e2e6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    FaEnvelopeOpen,\n    FaUser,\n    FaCalendarTimes,\n    FaMap,\n    FaPhone,\n    FaLock,\n} from 'react-icons/fa';\n\nconst url = 'https://randomuser.me/api/';\n\nfunction App() {\n    const [person, setPerson] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [title, setTitle] = useState(null);\n    const [value, setValue] = useState(null);\n\n    const fetchPerson = async () => {\n        try {\n            setIsLoading(true);\n            const response = await fetch(url);\n            if (response.status >= 400) {\n                throw new Error(response.statusText);\n            }\n            const data = await response.json();\n            const person = data.results[0];\n\n            const { phone, email } = person;\n            const { large: image } = person.picture;\n            const { first: firstName, last: lastName } = person.name;\n            const { password } = person.login;\n            const { number, name: street } = person.location.street;\n            const { age } = person.dob;\n\n            const newPerson = {\n                image,\n                phone,\n                email,\n                name: `${firstName} ${lastName}`,\n                street: `${number} ${street}`,\n                age,\n                password,\n            };\n\n            setIsLoading(false);\n            setPerson(newPerson);\n            setTitle('name');\n            setValue(newPerson.name);\n        } catch (error) {\n            alert(error);\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        fetchPerson();\n    }, []);\n\n    const handleMouseOver = (e) => {\n        if (e.target.classList.contains('icon')) {\n            const newTitle = e.target.dataset.id;\n            const newValue = person[newTitle];\n            setTitle(newTitle);\n            setValue(newValue);\n        }\n    };\n\n    return (\n        <main>\n            <div className='block bcg-black'></div>\n            <div className='block'>\n                <div className='container'>\n                    <img\n                        src={person && person.image}\n                        alt='random user'\n                        className='user-img'\n                    />\n                    <p className='user-title'>\n                        My <span>{title}</span> is\n                    </p>\n                    <p className='user-value'>{value}</p>\n                    <div className='values-list'>\n                        <button\n                            className='icon'\n                            onMouseOver={handleMouseOver}\n                            data-id='name'\n                        >\n                            <FaUser />\n                        </button>\n                        <button\n                            className='icon'\n                            onMouseOver={handleMouseOver}\n                            data-id='email'\n                        >\n                            <FaEnvelopeOpen />\n                        </button>\n                        <button\n                            className='icon'\n                            onMouseOver={handleMouseOver}\n                            data-id='age'\n                        >\n                            <FaCalendarTimes />\n                        </button>\n                        <button\n                            className='icon'\n                            onMouseOver={handleMouseOver}\n                            data-id='street'\n                        >\n                            <FaMap />\n                        </button>\n                        <button\n                            className='icon'\n                            onMouseOver={handleMouseOver}\n                            data-id='phone'\n                        >\n                            <FaPhone />\n                        </button>\n                        <button\n                            className='icon'\n                            onMouseOver={handleMouseOver}\n                            data-id='password'\n                        >\n                            <FaLock />\n                        </button>\n                    </div>\n                    <button className='btn' onClick={fetchPerson}>\n                        {isLoading ? 'loading' : 'random user'}\n                    </button>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}